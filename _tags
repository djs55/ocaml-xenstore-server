# OASIS_START
# DO NOT EDIT (digest: 7a8349b30153c9c7bcfc09f7f5fb4587)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library xenstore
"core/xenstore.cmxs": use_xenstore
"core/protocol.cmx": for-pack(Xenstore)
"core/handle.cmx": for-pack(Xenstore)
"core/client.cmx": for-pack(Xenstore)
"core/s.cmx": for-pack(Xenstore)
<core/*.ml{,i,y}>: pkg_cstruct
<core/*.ml{,i,y}>: pkg_cstruct.syntax
<core/*.ml{,i,y}>: pkg_lwt
<core/*.ml{,i,y}>: pkg_lwt.syntax
<core/*.ml{,i,y}>: pkg_sexplib
<core/*.ml{,i,y}>: pkg_uri
# Library xenstored
"server/xenstored.cmxs": use_xenstored
"server/logging.cmx": for-pack(Xenstored)
"server/error.cmx": for-pack(Xenstored)
"server/perms.cmx": for-pack(Xenstored)
"server/persistence.cmx": for-pack(Xenstored)
"server/introduce.cmx": for-pack(Xenstored)
"server/connection.cmx": for-pack(Xenstored)
"server/server.cmx": for-pack(Xenstored)
"server/effects.cmx": for-pack(Xenstored)
<server/*.ml{,i,y}>: pkg_cstruct
<server/*.ml{,i,y}>: pkg_cstruct.syntax
<server/*.ml{,i,y}>: pkg_git
<server/*.ml{,i,y}>: pkg_irmin
<server/*.ml{,i,y}>: pkg_irmin.unix
<server/*.ml{,i,y}>: pkg_lwt
<server/*.ml{,i,y}>: pkg_lwt.syntax
<server/*.ml{,i,y}>: pkg_sexplib
<server/*.ml{,i,y}>: pkg_uri
<server/*.ml{,i,y}>: use_xenstore
# Library xenstore_unix
"unix/xenstore_unix.cmxs": use_xenstore_unix
<unix/*.ml{,i,y}>: pkg_cstruct
<unix/*.ml{,i,y}>: pkg_cstruct.syntax
<unix/*.ml{,i,y}>: pkg_lwt
<unix/*.ml{,i,y}>: pkg_lwt.syntax
<unix/*.ml{,i,y}>: pkg_lwt.unix
<unix/*.ml{,i,y}>: pkg_sexplib
<unix/*.ml{,i,y}>: pkg_uri
<unix/*.ml{,i,y}>: use_xenstore
# Executable core_test
<core_test/core_test.{native,byte}>: pkg_cstruct
<core_test/core_test.{native,byte}>: pkg_cstruct.syntax
<core_test/core_test.{native,byte}>: pkg_lwt
<core_test/core_test.{native,byte}>: pkg_lwt.syntax
<core_test/core_test.{native,byte}>: pkg_lwt.unix
<core_test/core_test.{native,byte}>: pkg_oUnit
<core_test/core_test.{native,byte}>: pkg_sexplib
<core_test/core_test.{native,byte}>: pkg_uri
<core_test/core_test.{native,byte}>: use_xenstore
<core_test/*.ml{,i,y}>: pkg_cstruct
<core_test/*.ml{,i,y}>: pkg_cstruct.syntax
<core_test/*.ml{,i,y}>: pkg_lwt
<core_test/*.ml{,i,y}>: pkg_lwt.syntax
<core_test/*.ml{,i,y}>: pkg_lwt.unix
<core_test/*.ml{,i,y}>: pkg_oUnit
<core_test/*.ml{,i,y}>: pkg_sexplib
<core_test/*.ml{,i,y}>: pkg_uri
<core_test/*.ml{,i,y}>: use_xenstore
<core_test/core_test.{native,byte}>: custom
# Executable oxenstored
<userspace/main.{native,byte}>: pkg_cmdliner
<userspace/main.{native,byte}>: pkg_cstruct
<userspace/main.{native,byte}>: pkg_cstruct.syntax
<userspace/main.{native,byte}>: pkg_git
<userspace/main.{native,byte}>: pkg_io-page
<userspace/main.{native,byte}>: pkg_io-page.unix
<userspace/main.{native,byte}>: pkg_irmin
<userspace/main.{native,byte}>: pkg_irmin.unix
<userspace/main.{native,byte}>: pkg_lwt
<userspace/main.{native,byte}>: pkg_lwt.syntax
<userspace/main.{native,byte}>: pkg_lwt.unix
<userspace/main.{native,byte}>: pkg_sexplib
<userspace/main.{native,byte}>: pkg_shared-memory-ring
<userspace/main.{native,byte}>: pkg_shared-memory-ring.xenstore
<userspace/main.{native,byte}>: pkg_uri
<userspace/main.{native,byte}>: pkg_xen-evtchn
<userspace/main.{native,byte}>: use_xenstore
<userspace/main.{native,byte}>: use_xenstore_unix
<userspace/main.{native,byte}>: use_xenstored
<userspace/*.ml{,i,y}>: pkg_cmdliner
<userspace/*.ml{,i,y}>: pkg_cstruct
<userspace/*.ml{,i,y}>: pkg_cstruct.syntax
<userspace/*.ml{,i,y}>: pkg_git
<userspace/*.ml{,i,y}>: pkg_io-page
<userspace/*.ml{,i,y}>: pkg_io-page.unix
<userspace/*.ml{,i,y}>: pkg_irmin
<userspace/*.ml{,i,y}>: pkg_irmin.unix
<userspace/*.ml{,i,y}>: pkg_lwt
<userspace/*.ml{,i,y}>: pkg_lwt.syntax
<userspace/*.ml{,i,y}>: pkg_lwt.unix
<userspace/*.ml{,i,y}>: pkg_sexplib
<userspace/*.ml{,i,y}>: pkg_shared-memory-ring
<userspace/*.ml{,i,y}>: pkg_shared-memory-ring.xenstore
<userspace/*.ml{,i,y}>: pkg_uri
<userspace/*.ml{,i,y}>: pkg_xen-evtchn
<userspace/*.ml{,i,y}>: use_xenstore
<userspace/*.ml{,i,y}>: use_xenstore_unix
<userspace/*.ml{,i,y}>: use_xenstored
<userspace/main.{native,byte}>: custom
# Executable xs
<cli/cli.{native,byte}>: pkg_cstruct
<cli/cli.{native,byte}>: pkg_cstruct.syntax
<cli/cli.{native,byte}>: pkg_lwt
<cli/cli.{native,byte}>: pkg_lwt.syntax
<cli/cli.{native,byte}>: pkg_lwt.unix
<cli/cli.{native,byte}>: pkg_sexplib
<cli/cli.{native,byte}>: pkg_uri
<cli/cli.{native,byte}>: use_xenstore
<cli/cli.{native,byte}>: use_xenstore_unix
<cli/*.ml{,i,y}>: pkg_cstruct
<cli/*.ml{,i,y}>: pkg_cstruct.syntax
<cli/*.ml{,i,y}>: pkg_lwt
<cli/*.ml{,i,y}>: pkg_lwt.syntax
<cli/*.ml{,i,y}>: pkg_lwt.unix
<cli/*.ml{,i,y}>: pkg_sexplib
<cli/*.ml{,i,y}>: pkg_uri
<cli/*.ml{,i,y}>: use_xenstore
<cli/*.ml{,i,y}>: use_xenstore_unix
<cli/cli.{native,byte}>: custom
# Executable bench
<bench/bench.{native,byte}>: pkg_cstruct
<bench/bench.{native,byte}>: pkg_cstruct.syntax
<bench/bench.{native,byte}>: pkg_lwt
<bench/bench.{native,byte}>: pkg_lwt.syntax
<bench/bench.{native,byte}>: pkg_lwt.unix
<bench/bench.{native,byte}>: pkg_sexplib
<bench/bench.{native,byte}>: pkg_uri
<bench/bench.{native,byte}>: use_xenstore
<bench/bench.{native,byte}>: use_xenstore_unix
<bench/*.ml{,i,y}>: pkg_cstruct
<bench/*.ml{,i,y}>: pkg_cstruct.syntax
<bench/*.ml{,i,y}>: pkg_lwt
<bench/*.ml{,i,y}>: pkg_lwt.syntax
<bench/*.ml{,i,y}>: pkg_lwt.unix
<bench/*.ml{,i,y}>: pkg_sexplib
<bench/*.ml{,i,y}>: pkg_uri
<bench/*.ml{,i,y}>: use_xenstore
<bench/*.ml{,i,y}>: use_xenstore_unix
<bench/bench.{native,byte}>: custom
# OASIS_STOP
true: annot
<*/*.ml>: syntax_camlp4o
<unix/*.ml>: pkg_lwt.syntax
<client/*.ml>: pkg_lwt.syntax
<server/*.ml>: pkg_lwt.syntax
<server_test/binary.ml>: pkg_lwt.syntax
<userspace/*.ml>: pkg_lwt.syntax
<core/client.ml>: pkg_lwt.syntax
<core/protocol.ml>: pkg_sexplib.syntax, syntax_camlp4o
<core/protocol.mli>: pkg_sexplib.syntax, syntax_camlp4o
<server/node.ml>: pkg_sexplib.syntax, syntax_camlp4o
<server/node.mli>: pkg_sexplib.syntax, syntax_camlp4o
<server/quota.ml>: pkg_sexplib.syntax
<server/quota.mli>: pkg_sexplib.syntax
<server/store.ml>: pkg_sexplib.syntax
<server/store.mli>: pkg_sexplib.syntax
<server/symbol.ml>: pkg_sexplib.syntax, syntax_camlp4o
<server/symbol.mli>: pkg_sexplib.syntax, syntax_camlp4o
<server/connection.ml>: pkg_sexplib.syntax, syntax_camlp4o
<server/connection.mli>: pkg_sexplib.syntax, syntax_camlp4o
<server/transaction.ml{,i}>: pkg_sexplib.syntax
<server/domain.ml{,i}>: pkg_sexplib.syntax, syntax_camlp4o
<server/pRef.ml>: pkg_sexplib.syntax
<server/pBinReader.ml>: pkg_sexplib.syntax
<server/pBinWriter.ml>: pkg_sexplib.syntax
<server/limits.ml{,i}>: pkg_sexplib.syntax
<server/perms.ml>: pkg_sexplib.syntax, syntax_camlp4o
<server/perms.mli>: pkg_sexplib.syntax, syntax_camlp4o
<server/logging_interface.ml>: pkg_sexplib.syntax
<server/server.ml>: pkg_sexplib.syntax
<cli/*.ml>: pkg_lwt.syntax
<bench/*.ml>: pkg_lwt.syntax
<core>: include
<core/s.ml>: pkg_sexplib.syntax
<unix/sockets.ml>: pkg_sexplib.syntax
<userspace/interdomain.ml>: pkg_sexplib.syntax
<client_lwt>: include
<client_unix>: include
<server>: include
